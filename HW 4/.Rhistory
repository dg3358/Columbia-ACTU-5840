knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(patchwork)
library(readxl)
library(ggplot2)
library(patchwork)
library(readxl)
#read in data, remove empty column
phosData <- read_excel("Table 6.19-PlasmaPhosphate-1.xls", skip = 2,
sheet = "Sheet1", .name_repair = "unique_quiet")
phosData <- phosData[1:12, 1:3]
colnames(phosData) <- c("H_O","N_O", "C")
means <- colMeans(phosData, na.rm = TRUE)
oMean <- sum(phosData, na.rm = TRUE)/sum(!is.na(phosData))
MSE <- 0
MSB <- 0
for (i in colnames(phosData)) {
MSE <- MSE + sum((phosData[,i] - means[i])^2, na.rm = TRUE)
MSB <- MSB + sum(!is.na(phosData[,i]))*((means[i] - oMean)^2)
}
MSE <- MSE/(sum(!is.na(phosData)) - (dim(phosData)[2]))
MSB <- unname(MSB/(dim(phosData)[2] - 1))
sprintf("Test statistic: %f", MSB/MSE)
p_1a <- pf(MSB/MSE, df1 = dim(phosData)[2] - 1,
df2 = sum(!is.na(phosData)) - (dim(phosData)[2]), lower.tail = F)
sprintf("p value: %f", p_1a)
n_HO <- sum(!is.na(phosData[,"H_O"]))
n_NO <- sum(!is.na(phosData[,"N_O"]))
S_P <- sqrt(((n_HO - 1)*var(phosData$H_O, na.rm = TRUE)
+ (n_NO - 1)*var(phosData$N_O, na.rm = TRUE))/
(n_HO + n_NO - 2))
LCI <- unname(means["H_O"] - means["N_O"])[1] - 1.96*S_P*sqrt(1/n_HO + 1/n_NO)
UCI <- unname(means["H_O"] - means["N_O"])[1] + 1.96*S_P*sqrt(1/n_HO + 1/n_NO)
diffMeansconf <- c(LCI, UCI)
names(diffMeansconf) <- c("Lower Bound", "Upper Bound")
diffMeansconf
phosDataC <- phosData <- read_excel("Table 6.19-PlasmaPhosphate-1.xls",
skip = 2, sheet = "Sheet1",
range = cell_cols("E:F"), .name_repair = "unique_quiet")
phosDataC$Group <- factor(phosDataC$Group)
lm_1c <- lm("phosphate ~ factor(Group)", data = phosDataC)
std_resid <- rstandard(lm_1c)
resid_table <- data.frame(cbind(1:length(std_resid), std_resid))
colnames(resid_table) <- c("Index", "std_resid")
ggplot(data = resid_table) + geom_point(aes(x = Index, y = std_resid)) +
ylab("Standardized Residuals") + xlab("Observation Index") +
ggtitle("Standardized residuals against Observation Index") +
theme(plot.title = element_text(hjust = 0.5))
qqnorm(y = std_resid, ylab = "Standardized Residuals",
xlab = "Theoretical Quantiles",
main = "Standardized Residuals vs. N(0,1)")
qqline(y = std_resid)
facData <- read_excel("Table 6.21-Unbalanced data-1.xls", skip = 2,
sheet = "Sheet1", .name_repair = "unique_quiet")
facData$factorA <- factor(facData$factorA)
facData$factorB <- factor(facData$factorB)
lm2_inter <- lm("data ~ factorA + factorB + factorA*factorB", data = facData)
lm2_noInter <- lm("data ~ factorA + factorB", data = facData)
f_2a <- (sum(residuals(lm2_noInter)^2) - sum(residuals(lm2_inter)^2))/
(2 * (summary(lm2_inter)$sigma)^2)
sprintf("F-stat = %f", f_2a)
sprintf("p-value = %f", pf(f_2a, df1 = 2, df2 = 4, lower.tail = FALSE))
lm2_onlyB <-  lm("data ~ factorB", data = facData)
f_2b <- (sum(residuals(lm2_onlyB)^2) - sum(residuals(lm2_noInter)^2))/
(2 * (summary(lm2_noInter)$sigma)^2)
sprintf("F-stat = %f", f_2b)
sprintf("p-value = %f", pf(f_2b, df1 = 2, df2 = 6, lower.tail = FALSE))
lm2_onlyA <- lm("data ~ factorA", data = facData)
lm2_justMean <- lm("data ~ factorB", data = facData)
f_2c <- (sum(residuals(lm2_justMean)^2) - sum(residuals(lm2_onlyA)^2))/
(2 * (summary(lm2_onlyA)$sigma)^2)
sprintf("F-stat = %f", f_2c)
sprintf("p-value = %f", pf(f_2c, df1 = 2, df2 = 7, lower.tail = FALSE))
UNData <- read.csv("UNLifeExpectancy-4.csv", header = TRUE)
compData <- subset(UNData,complete.cases(PUBLICEDUCATION,
PRIVATEHEALTH,
FERTILITY,
GDP,
LIFEEXP))
gdPlot <- ggplot(data = compData) + geom_point(aes(x = GDP, y = LIFEEXP)) +
ggtitle("Life Expectancy vs. GDP of Countries") +
ylab("Life Expectancy") + theme(plot.title = element_text(hjust = 0.5, size = 10))
phPlot <- ggplot(data = compData) + geom_point(aes(x = PRIVATEHEALTH, y= LIFEEXP)) +
ggtitle("Life Expectancy vs. Private Health Expenditure") +
xlab("Private Health Expense") + ylab("Life Expectancy") +
theme(plot.title = element_text(hjust = 0.5, size = 10))
gdPlot + phPlot
compData$lnHEALTH <- log(compData$PRIVATEHEALTH)
compData$lnGDP <- log(compData$GDP)
lngdPlot <- ggplot(data = compData) + geom_point(aes(x = lnGDP, y = LIFEEXP)) +
ggtitle("Life Expectancy vs. GDP of Countries") + xlab("ln(GDP)") +
ylab("Life Expectancy") + theme(plot.title = element_text(hjust = 0.5, size = 10))
lnphPlot <- ggplot(data = compData) + geom_point(aes(x = lnHEALTH, y= LIFEEXP)) +
ggtitle("Life Expectancy vs. Private Health Expenditure") +
xlab("ln(Private Health Expense)") + ylab("Life Expectancy") +
theme(plot.title = element_text(hjust = 0.5, size = 10))
lngdPlot + lnphPlot
unReg <- lm("LIFEEXP ~ FERTILITY + PUBLICEDUCATION + log(PRIVATEHEALTH)",
data = UNData)
std_resid_UN <- rstandard(unReg)
resid_table_UN <- data.frame(cbind(1:length(std_resid_UN), std_resid_UN))
colnames(resid_table_UN) <- c("Index", "std_resid")
ggplot(data = resid_table_UN) + geom_point(aes(Index, std_resid)) +
ylab("Standardized Residuals") + xlab("Observation Index") +
ggtitle("Standard Residuals (UN) vs. Observation Index") +
theme(plot.title = element_text(hjust = 0.5))
qqnorm(y = std_resid_UN, ylab = "Standardized Residuals (UN)",
xlab = "Theoretical Quantiles",
main = "Standardized Residuals vs. N(0,1)")
qqline(y = std_resid_UN)
outliers <- std_resid_UN > 3 | std_resid_UN < -3
outliers <- which(outliers == TRUE)
names(outliers)
leverage <- hatvalues(unReg)
leverage
hat_matrix
leverage <- hatvalues(unReg)
hat_matrix <- cbind(1:length(leverage),leverage)
hat_matrix
leverage <- hatvalues(unReg)
hat_matrix <- cbind(1:length(leverage),leverage)
colnames(hat_matrix) <- c("Index", "Leverage")
ggplot(data = hat_matrix) + geom_point(aes(Index, Leverage)) +
ylab("Leverage") + xlab("Observation Index") +
ggtitle("Leverage vs. Observation Index") +
theme(plot.title = element_text(hjust = 0.5))
leverage <- hatvalues(unReg)
hat_matrix <- data.frame(cbind(1:length(leverage),leverage))
colnames(hat_matrix) <- c("Index", "Leverage")
ggplot(data = hat_matrix) + geom_point(aes(Index, Leverage)) +
ylab("Leverage") + xlab("Observation Index") +
ggtitle("Leverage vs. Observation Index") +
theme(plot.title = element_text(hjust = 0.5))
length(leverage)
high_leverage <- leverage > (3/38)
high_leverage <- which(high_leverage == TRUE)
names(high_leverage)
View(UNData)
UNData[95,]
high_leverage["95"]
index_trunc <- high_leverage["95"]
cooks.distance(unReg)[index_trunc]
index_trunc <- unname(high_leverage["95"])
sprintf("Lesotho Cook's Distance: %f",
unname(cooks.distance(unReg)[index_trunc]))
cooks_resid <- unReg$residuals[index_trunc]
cooks_resid
high_leverage[index_trunc]
high_leverage["index_trunc"]
high_leverage["95"]
leverage[index_trunc]
which.max(leverage)
cooks_resid <- (unReg$residuals[index_trunc])/summary(unReg)$sigma *
leverage[index_trunc]
cooks_resid
cooks_resid <- unname((unReg$residuals[index_trunc])/
(summary(unReg)$sigma *leverage[index_trunc]))
cooks_resid <- unname((unReg$residuals[index_trunc])/
(summary(unReg)$sigma *leverage[index_trunc]))
cooks_resid
cooks_resid <- (unReg$residuals[index_trunc])/
(summary(unReg)$sigma *leverage[index_trunc])
cooks_resid <- (unReg$residuals[index_trunc])/
(summary(unReg)$sigma *leverage[index_trunc])
cooks_resid
cooks_resid <- unname((unReg$residuals[index_trunc])/
(summary(unReg)$sigma *leverage[index_trunc]))
cooks_leverage <- unname(leverage[index_trunc]/
((3 + 1)*(1 - leverage[index_trunc])))
cooks_resid
cooks_leverage
cooks_resid <- unname((unReg$residuals[index_trunc])/
(summary(unReg)$sigma *leverage[index_trunc]))
cooks_leverage <- unname(leverage[index_trunc]/
((3 + 1)*(1 - leverage[index_trunc])))
cooks_resid
cooks_leverage
cooks_resid^2 * cooks_leverage
cooks_resid <- unname((unReg$residuals[index_trunc])/
(summary(unReg)$sigma *sqrt(1 - leverage[index_trunc])))
cooks_leverage <- unname(leverage[index_trunc]/
((3 + 1)*(1 - leverage[index_trunc])))
cooks_resid
cooks_leverage
cooks_resid^2 * cooks_leverage
cooks_resid <- unname((unReg$residuals[index_trunc])/
(summary(unReg)$sigma *sqrt(1 - leverage[index_trunc])))
cooks_leverage <- unname(leverage[index_trunc]/
((3 + 1)*(1 - leverage[index_trunc])))
sprintf("From Outlier: %f", cooks_resid^2)
sprintf("From High Leverage: %f", cooks_leverage)
sprintf("From Outlier: %f", cooks_resid)
cooks_resid <- unname((unReg$residuals[index_trunc])/
(summary(unReg)$sigma *sqrt(1 - leverage[index_trunc])))
cooks_leverage <- unname(leverage[index_trunc]/
((3 + 1)*(1 - leverage[index_trunc])))
sprintf("From Outlier: %f", cooks_resid)
sprintf("From High Leverage: %f", cooks_leverage)
cooks_resid <- unname((unReg$residuals[index_trunc])/
(summary(unReg)$sigma *sqrt(1 - leverage[index_trunc])))
cooks_leverage <- unname(leverage[index_trunc]/
((3 + 1)*(1 - leverage[index_trunc])))
sprintf("From Outlier: %f", cooks_resid^2)
sprintf("From High Leverage: %f", cooks_leverage)
sprintf("Cook's Distance: %f", cooks_resid^2 * cooks_leverage)
leverage <- hatvalues(unReg)
hat_matrix <- data.frame(cbind(1:length(leverage),leverage))
colnames(hat_matrix) <- c("Index", "Leverage")
ggplot(data = hat_matrix) + geom_point(aes(Index, Leverage)) +
ylab("Leverage") + xlab("Observation Index") +
ggtitle("Leverage vs. Observation Index") +
theme(plot.title = element_text(hjust = 0.5))
high_leverage <- leverage > (3/38)
high_leverage <- which(high_leverage == TRUE)
names(high_leverage)
index_trunc <- unname(high_leverage["95"])
sprintf("Lesotho Cook's Distance: %f",
unname(cooks.distance(unReg)[index_trunc]))
cooks_resid <- unname((unReg$residuals[index_trunc])/
(summary(unReg)$sigma *sqrt(1 - leverage[index_trunc])))
cooks_leverage <- unname(leverage[index_trunc]/
((3 + 1)*(1 - leverage[index_trunc])))
sprintf("From Outlier: %f", cooks_resid^2)
sprintf("From High Leverage: %f", cooks_leverage)
sprintf("Cook's Distance: %f", cooks_resid^2 * cooks_leverage)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(patchwork)
library(readxl)
#read in data, remove empty column
phosData <- read_excel("Table 6.19-PlasmaPhosphate-1.xls", skip = 2,
sheet = "Sheet1", .name_repair = "unique_quiet")
phosData <- phosData[1:12, 1:3]
colnames(phosData) <- c("H_O","N_O", "C")
means <- colMeans(phosData, na.rm = TRUE)
oMean <- sum(phosData, na.rm = TRUE)/sum(!is.na(phosData))
MSE <- 0
MSB <- 0
for (i in colnames(phosData)) {
MSE <- MSE + sum((phosData[,i] - means[i])^2, na.rm = TRUE)
MSB <- MSB + sum(!is.na(phosData[,i]))*((means[i] - oMean)^2)
}
MSE <- MSE/(sum(!is.na(phosData)) - (dim(phosData)[2]))
MSB <- unname(MSB/(dim(phosData)[2] - 1))
sprintf("Test statistic: %f", MSB/MSE)
p_1a <- pf(MSB/MSE, df1 = dim(phosData)[2] - 1,
df2 = sum(!is.na(phosData)) - (dim(phosData)[2]), lower.tail = F)
sprintf("p value: %f", p_1a)
n_HO <- sum(!is.na(phosData[,"H_O"]))
n_NO <- sum(!is.na(phosData[,"N_O"]))
S_P <- sqrt(((n_HO - 1)*var(phosData$H_O, na.rm = TRUE)
+ (n_NO - 1)*var(phosData$N_O, na.rm = TRUE))/
(n_HO + n_NO - 2))
LCI <- unname(means["H_O"] - means["N_O"])[1] - 1.96*S_P*sqrt(1/n_HO + 1/n_NO)
UCI <- unname(means["H_O"] - means["N_O"])[1] + 1.96*S_P*sqrt(1/n_HO + 1/n_NO)
diffMeansconf <- c(LCI, UCI)
names(diffMeansconf) <- c("Lower Bound", "Upper Bound")
diffMeansconf
phosDataC <- phosData <- read_excel("Table 6.19-PlasmaPhosphate-1.xls",
skip = 2, sheet = "Sheet1",
range = cell_cols("E:F"), .name_repair = "unique_quiet")
phosDataC$Group <- factor(phosDataC$Group)
lm_1c <- lm("phosphate ~ factor(Group)", data = phosDataC)
std_resid <- rstandard(lm_1c)
resid_table <- data.frame(cbind(1:length(std_resid), std_resid))
colnames(resid_table) <- c("Index", "std_resid")
ggplot(data = resid_table) + geom_point(aes(x = Index, y = std_resid)) +
ylab("Standardized Residuals") + xlab("Observation Index") +
ggtitle("Standardized residuals against Observation Index") +
theme(plot.title = element_text(hjust = 0.5))
qqnorm(y = std_resid, ylab = "Standardized Residuals",
xlab = "Theoretical Quantiles",
main = "Standardized Residuals vs. N(0,1)")
qqline(y = std_resid)
facData <- read_excel("Table 6.21-Unbalanced data-1.xls", skip = 2,
sheet = "Sheet1", .name_repair = "unique_quiet")
facData$factorA <- factor(facData$factorA)
facData$factorB <- factor(facData$factorB)
lm2_inter <- lm("data ~ factorA + factorB + factorA*factorB", data = facData)
lm2_noInter <- lm("data ~ factorA + factorB", data = facData)
f_2a <- (sum(residuals(lm2_noInter)^2) - sum(residuals(lm2_inter)^2))/
(2 * (summary(lm2_inter)$sigma)^2)
sprintf("F-stat = %f", f_2a)
sprintf("p-value = %f", pf(f_2a, df1 = 2, df2 = 4, lower.tail = FALSE))
lm2_onlyB <-  lm("data ~ factorB", data = facData)
f_2b <- (sum(residuals(lm2_onlyB)^2) - sum(residuals(lm2_noInter)^2))/
(2 * (summary(lm2_noInter)$sigma)^2)
sprintf("F-stat = %f", f_2b)
lm2_onlyA <- lm("data ~ factorA", data = facData)
lm2_justMean <- lm("data ~ factorB", data = facData)
f_2c <- (sum(residuals(lm2_justMean)^2) - sum(residuals(lm2_onlyA)^2))/
(2 * (summary(lm2_onlyA)$sigma)^2)
sprintf("F-stat = %f", f_2c)
sprintf("p-value = %f", pf(f_2c, df1 = 2, df2 = 7, lower.tail = FALSE))
sprintf("p-value = %f", pf(9.38056, df1 = 2, df2 = 30, lower.tail = FALSE))
?mean
UNData <- read.csv("UNLifeExpectancy-4.csv", header = TRUE)
compData <- subset(UNData,complete.cases(PUBLICEDUCATION,
PRIVATEHEALTH,
FERTILITY,
GDP,
LIFEEXP))
View(UNData)
gdPlot <- ggplot(data = compData) + geom_point(aes(x = GDP, y = LIFEEXP)) +
ggtitle("Life Expectancy vs. GDP of Countries") +
ylab("Life Expectancy") + theme(plot.title = element_text(hjust = 0.5, size = 10))
phPlot <- ggplot(data = compData) + geom_point(aes(x = PRIVATEHEALTH, y= LIFEEXP)) +
ggtitle("Life Expectancy vs. Private Health Expenditure") +
xlab("Private Health Expense") + ylab("Life Expectancy") +
theme(plot.title = element_text(hjust = 0.5, size = 10))
gdPlot + phPlot
compData$lnHEALTH <- log(compData$PRIVATEHEALTH)
compData$lnGDP <- log(compData$GDP)
lngdPlot <- ggplot(data = compData) + geom_point(aes(x = lnGDP, y = LIFEEXP)) +
ggtitle("Life Expectancy vs. GDP of Countries") + xlab("ln(GDP)") +
ylab("Life Expectancy") + theme(plot.title = element_text(hjust = 0.5, size = 10))
lnphPlot <- ggplot(data = compData) + geom_point(aes(x = lnHEALTH, y= LIFEEXP)) +
ggtitle("Life Expectancy vs. Private Health Expenditure") +
xlab("ln(Private Health Expense)") + ylab("Life Expectancy") +
theme(plot.title = element_text(hjust = 0.5, size = 10))
lngdPlot + lnphPlot
unReg <- lm("LIFEEXP ~ FERTILITY + PUBLICEDUCATION + log(PRIVATEHEALTH)",
data = UNData)
summary(unReg)
unReg <- lm("LIFEEXP ~ FERTILITY + PUBLICEDUCATION + log(PRIVATEHEALTH)",
data = UNData)
std_resid_UN <- rstandard(unReg)
resid_table_UN <- data.frame(cbind(1:length(std_resid_UN), std_resid_UN))
colnames(resid_table_UN) <- c("Index", "std_resid")
ggplot(data = resid_table_UN) + geom_point(aes(Index, std_resid)) +
ylab("Standardized Residuals") + xlab("Observation Index") +
ggtitle("Standard Residuals (UN) vs. Observation Index") +
theme(plot.title = element_text(hjust = 0.5))
qqnorm(y = std_resid_UN, ylab = "Standardized Residuals (UN)",
xlab = "Theoretical Quantiles",
main = "Standardized Residuals vs. N(0,1)")
qqline(y = std_resid_UN)
qqnorm(y = std_resid_UN, ylab = "Standardized Residuals (UN)",
xlab = "Theoretical Quantiles",
main = "Standardized Residuals vs. N(0,1)")
qqline(y = std_resid_UN)
outliers <- std_resid_UN > 3 | std_resid_UN < -3
outliers <- which(outliers == TRUE)
names(outliers)
View(UNData)
leverage <- hatvalues(unReg)
hat_matrix <- data.frame(cbind(1:length(leverage),leverage))
colnames(hat_matrix) <- c("Index", "Leverage")
ggplot(data = hat_matrix) + geom_point(aes(Index, Leverage)) +
ylab("Leverage") + xlab("Observation Index") +
ggtitle("Leverage vs. Observation Index") +
theme(plot.title = element_text(hjust = 0.5))
high_leverage <- leverage > (3/38)
high_leverage <- which(high_leverage == TRUE)
names(high_leverage)
index_trunc <- unname(high_leverage["95"])
sprintf("Lesotho Cook's Distance: %f",
unname(cooks.distance(unReg)[index_trunc]))
cooks_resid <- unname((unReg$residuals[index_trunc])/
(summary(unReg)$sigma *sqrt(1 - leverage[index_trunc])))
cooks_leverage <- unname(leverage[index_trunc]/
((3 + 1)*(1 - leverage[index_trunc])))
sprintf("From Outlier: %f", cooks_resid^2)
sprintf("From High Leverage: %f", cooks_leverage)
sprintf("Cook's Distance: %f", cooks_resid^2 * cooks_leverage)
lm4c_lnHEALTH <- lm("log(PRIVATEHEALTH) ~ FERTILITY + PUBLICEDUCATION",
data = UNData)
sprintf("R^2 of lnHEALTH: %f", summary(lm4c_lnHEALTH)$r.squared)
VIF_lnHEALTH <- 1/(1 - summary(lm4c_lnHEALTH)$r.squared)
sprintf("VIF of lnHEALTH: %f", VIF_lnHEALTH)
compForVAR <- subset(UNData,complete.cases(PUBLICEDUCATION,PRIVATEHEALTH,
FERTILITY, LIFEEXP))
compForVAR$lnHEALTH <- log(compForVAR$PRIVATEHEALTH)
bigN <- dim(compForVAR)[1]
#For lnHEALTH
sigmasq_lnHEALTH <- unname(diag(vcov(unReg))["log(PRIVATEHEALTH)"])
VIF_lnHEALTH <- sigmasq_lnHEALTH * var(compForVAR$lnHEALTH) * (bigN - 1)/
summary(unReg)$sigma^2
#For Fertility
sigmasq_Fertility <- unname(diag(vcov(unReg))["FERTILITY"])
VIF_Fertility <- sigmasq_Fertility * var(compForVAR$FERTILITY) * (bigN - 1)/
summary(unReg)$sigma^2
# For Public Education
sigma_sq_PE <- unname(diag(vcov(unReg))["PUBLICEDUCATION"])
VIF_PE <- sigma_sq_PE * var(compForVAR$PUBLICEDUCATION) * (bigN - 1)/
summary(unReg)$sigma^2
VIFs <- c(VIF_Fertility, VIF_PE, VIF_lnHEALTH)
names(VIFs) <- c("Fertility VIF", "Public Ed. VIF", "ln(HEALTH) VIF")
VIFs
